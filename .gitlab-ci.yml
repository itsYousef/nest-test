# stages:
#   - "test"
#   - "build"
#   - "deploy"

variables:
    IS_MANUAL: "true"

run_test:
    image: node:20.10-bookworm-slim
    # stage: test
    cache:  # Cache modules using lock file
        key:
            files:
                - package-lock.json
        paths:
        - node_modules/
    rules:
    - if: $IS_MANUAL == "true"
      when: never
    before_script:
        - apt update -y && apt install -y openssl
    script:
        - npm install
        - npm run test

build_image:
    variables:
        IMAGE_NAME: itsyousef7677/nest-test
        IMAGE_TAG: "1.0"
        DOCKER_TLS_CERTDIR: "/certs"
    image: docker:24.0.7
    services:
        - docker:24.0.7-dind
    rules:
    - if: $IS_MANUAL == "true"
      when: never
    before_script:
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
    script:
        - docker build -t $IMAGE_NAME:$IMAGE_TAG .  
        - docker push $IMAGE_NAME:$IMAGE_TAG


# docker-build:
#   image: docker:cli
#   stage: build
#   services:
#     - docker:dind
#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
#   # Default branch is also tagged with `latest`
#   script:
#     - docker build --pull -t "$DOCKER_IMAGE_NAME" .
#     - docker push "$DOCKER_IMAGE_NAME"
#     - |
#       if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
#         docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
#         docker push "$CI_REGISTRY_IMAGE:latest"
#       fi
#   # Run this job in a branch where a Dockerfile exists
#   rules:
#     - if: $CI_COMMIT_BRANCH
#       exists:
#         - Dockerfile
